/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gravicor;

import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Daniel
 */
public class ConciliarVentas extends javax.swing.JFrame {

    /**
     * Creates new form FacturasPorCobrar
     */
    public ConciliarVentas() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Conciliar Ventas");
        try{
            actualizarTabla("");
            actualizarTabla2("");
            
        }
        catch(Exception e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        searchTF = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla2 = new javax.swing.JTable();
        searchTF2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(249, 255, 255));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Venta ID", "Folio Transportista", "Folio Planta", "Nombre Cliente", "Material", "Fecha Venta", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabla);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/conciliarVenta.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/conciliarVenta2.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 48)); // NOI18N
        jLabel1.setText("Conciliar Ventas");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/encabezadoLogoGravicor.png"))); // NOI18N

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/regresar.png"))); // NOI18N
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/regresar2.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        searchTF.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        searchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTFKeyReleased(evt);
            }
        });

        tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Venta Fantasma ID", "Factura ID", "Cantidad M3", "Precio M3", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla2);

        searchTF2.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        searchTF2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTF2KeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLabel3.setText("Buscar venta Fantasma:");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLabel4.setText("Buscar ventas:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(27, 27, 27)
                        .addComponent(searchTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(26, 26, 26)
                        .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addComponent(jButton3)
                            .addGap(83, 83, 83)
                            .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(109, 109, 109)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(128, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(159, 159, 159))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(332, 332, 332))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Cobranza cobranza= new Cobranza();
        cobranza.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        // Se marca la factura como cobrada
        if(tabla.getSelectedRow() < 0){
            JOptionPane.showMessageDialog(this, "Por favor selecciona un elemento que desea conciliar de la primera tabla", "Error de selección", JOptionPane.ERROR_MESSAGE);
        }
        else if(tabla2.getSelectedRow() < 0){
            JOptionPane.showMessageDialog(this, "Por favor selecciona un elemento que desea conciliar de la segunda tabla", "Error de selección", JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                //se guardan los datos en variables
                String idVenta = (String)tabla.getModel().getValueAt(tabla.getSelectedRow(), 0);
                String idVentaFantasma = (String)tabla2.getModel().getValueAt(tabla2.getSelectedRow(), 0);
                //se revisa que se hayan seleccionado variables válidas
                if(idVenta.equals("") || idVenta == null || idVentaFantasma.equals("") || idVentaFantasma == null){
                    throw  new NoTypeRequiredException("Por favor selecciona un registro válido");
                }
                //se valida que los montos de la venta y venta fantasma sean los mismos
                String montoVenta = (String)tabla.getModel().getValueAt(tabla.getSelectedRow(), 6);;
                String montoVentaFantasma = (String)tabla2.getModel().getValueAt(tabla2.getSelectedRow(), 4);;
                if(!montoVenta.equals(montoVentaFantasma)){
                    throw  new NoTypeRequiredException("Los montos de la venta y de la venta fantasma deben coincidir");
                }
                //se marcan las opciones del cuadro de dialogo
                Object[] options = {"SI","NO"};
                //se crea el cuadro de dialogo
                int n = JOptionPane.showOptionDialog(this, //si = 0, no = 1
                    "¿Estás seguro que deseas conciliar la venta #"+idVenta+" con la venta fantasma #"+idVentaFantasma+"?",
                    "¿Marcar conciliación?",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,     //do not use a custom Icon
                    options,  //the titles of buttons
                    options[0]); //default button title
                if(n == 0){
                    //Se realiza el procedimiento
                    
                    //se genera el query de la venta actualizada
                    String[] infoVentaNueva = {idVenta, (String)tabla2.getModel().getValueAt(tabla2.getSelectedRow(), 1)}; //ventaID, facturaID
                    String queryActualizarVenta = Globales.baseDatos.generateUptateVentaQuery(infoVentaNueva);
                    //se genera el query para desactivar la venta fantasma
                    String queryActualizarVentaFantasma = "UPDATE VENTAFANTASMA SET ESCONCILIADA = 1, "
                            + "REFERENCIAVENTA = "+idVenta+" WHERE VENTAFANTASMA.VANTAID = " + idVentaFantasma;
                    //se ejecutan los querys
                    String[] querys = {queryActualizarVenta,queryActualizarVentaFantasma};
                    boolean exito = Globales.baseDatos.commitWithRollback(querys);
                    if(!exito){
                        throw new NoConectionDataBaseException("Error al conectar con la base de datos: " + 
                                Globales.baseDatos.getUltimoError());
                    }
                    //se actualizan las tablas
                    limpiarTabla();
                    actualizarTabla("");
                    limpiarTabla2();
                    actualizarTabla2("");
                    JOptionPane.showMessageDialog(this,"La conciliación se ha marcado con éxito","El registro se ha guardado con éxito",JOptionPane.INFORMATION_MESSAGE);
                }
            }
            catch(NoConectionDataBaseException e){
                //marcar la excepcion
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error de conexión con la base de datos", JOptionPane.ERROR_MESSAGE);
            }
            catch(NoTypeRequiredException e){
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error de formato", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTFKeyReleased
        // TODO add your handling code here:
        try{
            if(!searchTF.getText().equals("")){
                limpiarTabla();
                String query = "AND (";
                if(searchTF.getText().matches("-?\\d+(\\.\\d+)?")){
                    query += "V.VENTAID = "+searchTF.getText()+" OR ";
                }
                query += "V.FOLIOTRANSPORTISTA LIKE '%"+searchTF.getText()+"%' OR ";
                query +=  "V.FOLIOPLANTA LIKE '%"+searchTF.getText()+"%')";
          
                actualizarTabla(query);
            }
            else{
                limpiarTabla();
                actualizarTabla("");
            }
        }
        catch (Exception e){
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error de conexión con la base de datos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchTFKeyReleased

    private void searchTF2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTF2KeyReleased
        // TODO add your handling code here:
        try{
            if(!searchTF2.getText().equals("")){
                limpiarTabla2();
                actualizarTabla2("AND (IDFACTURA LIKE '%" + searchTF2.getText() + "%')");
            }
            else{
                limpiarTabla2();
                actualizarTabla2("");
            }
        }
        catch (Exception e){
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error de conexión con la base de datos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchTF2KeyReleased

    private void actualizarTabla(String searchVenta) throws NoConectionDataBaseException, NoTypeRequiredException{
        //Se llena la primera tabla
        String query = "SELECT V.VENTAID, V.FOLIOTRANSPORTISTA, V.FOLIOPLANTA, C.NOMBRECLIENTE, M.DESCRIPCIONMATERIAL, V.FECHAVENTA, (V.PRECIOM3 * V.CANTIDADM3) AS MONTO\n" +
                        "FROM VENTA AS V, CLIENTE AS C, MATERIAL AS M\n" +
                        "WHERE V.CLIENTEID = C.CLIENTEID AND V.MATERIALID = M.MATERIALID AND V.ACTIVO = 1 AND V.ESFACTURADO = 0 AND V.ESCREDITO = 1 " +
                                         searchVenta;
        
        String[] columnas = {"VENTAID", "FOLIOTRANSPORTISTA", "FOLIOPLANTA", "NOMBRECLIENTE", "DESCRIPCIONMATERIAL", "FECHAVENTA", "MONTO"};
        boolean validacion = Globales.baseDatos.insertarEnTabla(query, columnas, tabla);
        
        if(validacion == false){
                throw new NoConectionDataBaseException("Error al conectar a la base de datos: " + Globales.baseDatos.getUltimoError());
        }
    }
    
    private void actualizarTabla2(String searchVentaFantasma) throws NoConectionDataBaseException, NoTypeRequiredException{
        //Se llena la primera tabla
        String query = "SELECT VANTAID , IDFACTURA, CANTIDADM3, PRECIOM3, (CANTIDADM3 * PRECIOM3) AS MONTO\n" +
                        "FROM VENTAFANTASMA\n" +
                        "WHERE ESCONCILIADA = 0 AND ESACTIVO = 1 " + searchVentaFantasma;
        
        String[] columnas = {"VANTAID","IDFACTURA", "CANTIDADM3", "PRECIOM3", "MONTO"};
        boolean validacion = Globales.baseDatos.insertarEnTabla(query, columnas, tabla2);
        
        if(validacion == false){
                throw new NoConectionDataBaseException("Error al conectar a la base de datos: " + Globales.baseDatos.getUltimoError());
        }
    }
    
    private void limpiarTabla(){
        //se limplia la tabla 1
        DefaultTableModel dtm = (DefaultTableModel)tabla.getModel(); 
        dtm.setRowCount(0);
        String[] columnas = {"","","","","","",""};
        dtm.addRow(columnas);
        
        
    }
    
    private void limpiarTabla2(){
        //se limpia la tabla 2
        DefaultTableModel dtm2 = (DefaultTableModel)tabla2.getModel(); 
        dtm2.setRowCount(0);
        String[] columnas2 = {"","","",""};
        dtm2.addRow(columnas2);
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConciliarVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConciliarVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConciliarVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConciliarVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConciliarVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField searchTF;
    private javax.swing.JTextField searchTF2;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tabla2;
    // End of variables declaration//GEN-END:variables
}
