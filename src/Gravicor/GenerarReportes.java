/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gravicor;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import javafx.scene.control.RadioButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;


/**
 *
 * @author Gravicor
 */
public class GenerarReportes extends javax.swing.JFrame {

    //array que guarda los radio buttons
    private JRadioButton[] radioButtons = new JRadioButton[7];
    
    public GenerarReportes() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Generar reportes");
        generarradiolist();
        
        try{
            String queryFecha = "SELECT convert(varchar, getdate(), 105) as FECHA";
            String[] columnasFecha = {"FECHA"};
            LinkedList<LinkedList<String>> fecha = Globales.baseDatos.select(queryFecha, columnasFecha);
            if(fecha == null){
                throw new NoConectionDataBaseException("Error al conectar a la base de datos: " + Globales.baseDatos.getUltimoError());
            }
            if(fecha.size() <1 || fecha.get(0).size() < 1){
                throw new NoTypeRequiredException("No se pudo conectar con la base de datos, error inesperado");
            }
            
            String[] resultadoFecha = fecha.get(0).get(0).split("-");//obtiene la fecha actual
            GregorianCalendar dia = new GregorianCalendar();
            dia.set(new Integer(resultadoFecha[2]),new Integer(resultadoFecha[1]) -1,new Integer(resultadoFecha[0]));
            //se establece la decha maxima para ambos calendarios
            fechaFinal.setMaxSelectableDate(dia.getTime());
            fechaInicial.setMaxSelectableDate(dia.getTime());
            //se establece la decha minima para ambos calendarios
            dia.set(2018,0,1);
            fechaFinal.setMinSelectableDate(dia.getTime());
            fechaInicial.setMinSelectableDate(dia.getTime());
        }
        catch(NoConectionDataBaseException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error de conexión con la base de datos", JOptionPane.ERROR_MESSAGE);
            fechaInicial.setVisible(false);
            fechaFinal.setVisible(false);
        }
        catch(NoTypeRequiredException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error al cargar el calendario", JOptionPane.WARNING_MESSAGE);
            fechaInicial.setVisible(false);
            fechaFinal.setVisible(false);
        }
    }
    
    //metodo que declara el array de los radio buttons
    private void generarradiolist(){
        this.radioButtons[0] = this.radioCamionesB;
        this.radioButtons[1] = this.radioClientesB; 
        this.radioButtons[2] = this.radioFacturasB; 
        this.radioButtons[3] = this.radioGastosGeneralesB;
        this.radioButtons[4] = this.radioVentasB;
        this.radioButtons[5] = this.radioVentasFantasmaB;
        this.radioButtons[6] = this.radioViajesB;
    }

    private void enableCalendarios(){
        fechaFinal.setEnabled(true);
        fechaInicial.setEnabled(true);
    }
    
    private void desactivateCalendarios(){
        fechaFinal.setEnabled(false);
        fechaInicial.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        dateChooserDialog2 = new datechooser.beans.DateChooserDialog();
        jPanel1 = new javax.swing.JPanel();
        regresarB = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pathTF = new javax.swing.JTextField();
        radioCamionesB = new javax.swing.JRadioButton();
        radioClientesB = new javax.swing.JRadioButton();
        radioFacturasB = new javax.swing.JRadioButton();
        radioGastosGeneralesB = new javax.swing.JRadioButton();
        radioVentasB = new javax.swing.JRadioButton();
        radioVentasFantasmaB = new javax.swing.JRadioButton();
        radioViajesB = new javax.swing.JRadioButton();
        CamionesActivosCB = new javax.swing.JCheckBox();
        camionesInactivosCB = new javax.swing.JCheckBox();
        generarReportesB = new javax.swing.JButton();
        fechaInicial = new com.toedter.calendar.JDateChooser();
        fechaFinal = new com.toedter.calendar.JDateChooser();
        facturasActivasCB = new javax.swing.JCheckBox();
        facturasInactivasCB = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(249, 255, 255));

        regresarB.setText("Regresar");
        regresarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarBActionPerformed(evt);
            }
        });

        jButton2.setText("Ubicación de archivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        pathTF.setEditable(false);

        radioCamionesB.setText("Reporte de camiones");
        radioCamionesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCamionesBActionPerformed(evt);
            }
        });

        radioClientesB.setText("Reporte de clientes");
        radioClientesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioClientesBActionPerformed(evt);
            }
        });

        radioFacturasB.setText("Reporte de facturas");
        radioFacturasB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioFacturasBActionPerformed(evt);
            }
        });

        radioGastosGeneralesB.setText("Reporte de gastos generales");
        radioGastosGeneralesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioGastosGeneralesBActionPerformed(evt);
            }
        });

        radioVentasB.setText("Reporte de ventas");
        radioVentasB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioVentasBActionPerformed(evt);
            }
        });

        radioVentasFantasmaB.setText("Reporte de ventas fantasmas");
        radioVentasFantasmaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioVentasFantasmaBActionPerformed(evt);
            }
        });

        radioViajesB.setText("Reporte de viajes de piedra en greña");
        radioViajesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioViajesBActionPerformed(evt);
            }
        });

        CamionesActivosCB.setSelected(true);
        CamionesActivosCB.setText("Camiones Activos");

        camionesInactivosCB.setSelected(true);
        camionesInactivosCB.setText("Camiones Inactivos");

        generarReportesB.setText("Generar Reportes");
        generarReportesB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarReportesBActionPerformed(evt);
            }
        });

        fechaInicial.setEnabled(false);

        fechaFinal.setEnabled(false);

        facturasActivasCB.setSelected(true);
        facturasActivasCB.setText("Facturas Activas");

        facturasInactivasCB.setSelected(true);
        facturasInactivasCB.setText("Facturas Inactivas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pathTF, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(regresarB))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(356, 356, 356)
                                .addComponent(generarReportesB))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(radioCamionesB)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(radioViajesB)
                                                    .addComponent(radioVentasFantasmaB, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(radioVentasB, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(radioGastosGeneralesB, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(radioClientesB, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(CamionesActivosCB)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(radioFacturasB)
                                                .addGap(86, 86, 86))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(177, 177, 177)
                                        .addComponent(facturasActivasCB)))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(facturasInactivasCB)
                                    .addComponent(camionesInactivosCB))))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fechaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(136, 151, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(regresarB)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(radioCamionesB)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CamionesActivosCB)
                    .addComponent(camionesInactivosCB))
                .addGap(20, 20, 20)
                .addComponent(radioClientesB)
                .addGap(18, 18, 18)
                .addComponent(radioFacturasB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facturasActivasCB)
                    .addComponent(facturasInactivasCB))
                .addGap(18, 18, 18)
                .addComponent(radioGastosGeneralesB)
                .addGap(85, 85, 85)
                .addComponent(radioVentasB)
                .addGap(54, 54, 54)
                .addComponent(radioVentasFantasmaB)
                .addGap(61, 61, 61)
                .addComponent(radioViajesB)
                .addGap(48, 48, 48)
                .addComponent(generarReportesB)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void regresarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarBActionPerformed
        // TODO add your handling code here:
        MenuPrincipal menu= new MenuPrincipal();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_regresarBActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView()); 
        j.showSaveDialog(null); 
        
        try{
            String path = j.getSelectedFile().getPath();
            if(!path.endsWith(".xlsx")){
                path += ".xlsx";
            }
            pathTF.setText(path);
            
        }
        catch(Exception e){
            
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void radioCamionesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCamionesBActionPerformed
        // TODO add your handling code here:
        limpiarOpciones();
        this.radioCamionesB.setSelected(true);
        desactivateCalendarios();
    }//GEN-LAST:event_radioCamionesBActionPerformed

    private void radioClientesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioClientesBActionPerformed
        // TODO add your handling code here:
        limpiarOpciones();
        this.radioClientesB.setSelected(true);
        desactivateCalendarios();
    }//GEN-LAST:event_radioClientesBActionPerformed

    private void radioFacturasBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioFacturasBActionPerformed
        // TODO add your handling code here:
        limpiarOpciones();
        this.radioFacturasB.setSelected(true);
        enableCalendarios();
    }//GEN-LAST:event_radioFacturasBActionPerformed

    private void radioGastosGeneralesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioGastosGeneralesBActionPerformed
        // TODO add your handling code here:
        limpiarOpciones();
        this.radioGastosGeneralesB.setSelected(true);
    }//GEN-LAST:event_radioGastosGeneralesBActionPerformed

    private void radioVentasBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioVentasBActionPerformed
        // TODO add your handling code here:
        limpiarOpciones();
        this.radioVentasB.setSelected(true);
    }//GEN-LAST:event_radioVentasBActionPerformed

    private void radioVentasFantasmaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioVentasFantasmaBActionPerformed
        // TODO add your handling code here:
        limpiarOpciones();
        this.radioVentasFantasmaB.setSelected(true);
    }//GEN-LAST:event_radioVentasFantasmaBActionPerformed

    private void radioViajesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioViajesBActionPerformed
        // TODO add your handling code here:
        limpiarOpciones();
        this.radioViajesB.setSelected(true);
    }//GEN-LAST:event_radioViajesBActionPerformed

    //metodo que regresa el radiobutton que esta seleccionado
    private int radioButtonSeleccionado(){
        
        for(int i = 0; i < this.radioButtons.length; i++){
            if(this.radioButtons[i].isSelected()){
                return i;
            }
        }
        
        return -1;
    }
    
    //metodo que valida que las fechas son validas
    private boolean checkDates(){
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");

        if(fechaFinal.getCalendar() == null || fechaInicial.getCalendar() ==null){
            return false;
        }
        if(fechaInicial.getCalendar().after(fechaFinal.getCalendar()) && !sdf.format(fechaInicial.getDate()).equals(sdf.format(fechaFinal.getDate()))){
            return false;
        }
        
        return true;
    }
    
   //Metodo que genera los reportes
    private void generarReportesBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarReportesBActionPerformed
        // TODO add your handling code here:
        
        try{
            //Se desactivan los botones de crear factura y regresar
            generarReportesB.setEnabled(false);
            regresarB.setEnabled(false);
            //se revisa que se haya seleccionado el lugar del archivo
            if(this.pathTF.getText().equals("") || this.pathTF == null){
                throw new NoTypeRequiredException("Por favor selecciona una ubicación de archivo válida");
            }
            String query = "";
            String[] columnas = {};
            int radioButtonSeleccionado = radioButtonSeleccionado();
            switch (radioButtonSeleccionado){
                case -1: //no hay ninguna opcion seleccionada
                    throw new NoTypeRequiredException("Por favor selecciona una opcion para generar un reporte");
                case 0:// reporte de camiones
                    
                    query = Globales.baseDatos.generateReporteCamionesQuery(CamionesActivosCB.isSelected(), camionesInactivosCB.isSelected());
                    if(query == null){
                        throw new NoTypeRequiredException("Por favor selecciona por lo menos una opción para generar el reporte de camiones");
                    }
                    String[] columnasCamiones = {"IDCAMION", "NombreOperador", "DescripcionCamion", "ColorCamion", "EstatusCamion"};
                    columnas = columnasCamiones;
                    break;
                case 1:// reporte de clientes
                    
                    query = Globales.baseDatos.generateReporteClientesQuery();
                    String[] columnasClientes = {"CLIENTEID","NOMBRECLIENTE","GRAVAUNMEDIO","GRAVATRESCUARTOS","ARENILLA"};
                    columnas = columnasClientes;
                    break;
                case 2:// reporte de facturas
                    if(!checkDates()){
                        throw new NoTypeRequiredException("Por favor selecciona fechas válidas para generar el reporte de facturas");
                    }
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    query = Globales.baseDatos.generateReporteFacturasQuery(facturasActivasCB.isSelected(), facturasInactivasCB.isSelected(), sdf.format(fechaInicial.getDate()), sdf.format(fechaFinal.getDate()));
                    if(query == null){
                        throw new NoTypeRequiredException("Por favor selecciona por lo menos una opción para generar el reporte de facturas");
                    }
                    String[] columnasFactura = {"IDFACTURA","MONTOFACTURA", "FechaFacturaCreada", "EsFacturaPagada", "FechaFacturaPagada", "EsFacturaActiva", "NOMBRECLIENTE"};
                    columnas = columnasFactura;
                    
                    break;
                    
            }
            
            //se genera el reporte
            boolean exito = Globales.baseDatos.createReportFile(this.pathTF.getText(), query, columnas);
            
            //se verifica que sea correcta la escritura del archivo
            if(!exito){
                throw new NoConectionDataBaseException("Error al conectar con la base de datos: " + Globales.baseDatos.getUltimoError());
            }
            JOptionPane.showMessageDialog(this,"El registro se ha guardado con éxito","El registro se ha guardado con éxito",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(NoTypeRequiredException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error procesar la solicitud", JOptionPane.WARNING_MESSAGE);
        }
        catch(NoConectionDataBaseException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error al conectar con la base de datos", JOptionPane.WARNING_MESSAGE);
        }
        finally{
            generarReportesB.setEnabled(true);
            regresarB.setEnabled(true);
        }
    }//GEN-LAST:event_generarReportesBActionPerformed

    //metodo que limpia todos los radio buttons
    private void limpiarOpciones(){
        for(JRadioButton button : this.radioButtons){
            button.setSelected(false);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenerarReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenerarReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenerarReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenerarReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenerarReportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CamionesActivosCB;
    private javax.swing.JCheckBox camionesInactivosCB;
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private datechooser.beans.DateChooserDialog dateChooserDialog2;
    private javax.swing.JCheckBox facturasActivasCB;
    private javax.swing.JCheckBox facturasInactivasCB;
    private com.toedter.calendar.JDateChooser fechaFinal;
    private com.toedter.calendar.JDateChooser fechaInicial;
    private javax.swing.JButton generarReportesB;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField pathTF;
    private javax.swing.JRadioButton radioCamionesB;
    private javax.swing.JRadioButton radioClientesB;
    private javax.swing.JRadioButton radioFacturasB;
    private javax.swing.JRadioButton radioGastosGeneralesB;
    private javax.swing.JRadioButton radioVentasB;
    private javax.swing.JRadioButton radioVentasFantasmaB;
    private javax.swing.JRadioButton radioViajesB;
    private javax.swing.JButton regresarB;
    // End of variables declaration//GEN-END:variables
}
