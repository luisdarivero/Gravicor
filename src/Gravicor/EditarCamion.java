/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gravicor;

import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel
 */
public class EditarCamion extends javax.swing.JFrame {

    /**
     * Creates new form AnadirCamion
     */
    
    private String ultimoCamion = "1";
    
    public void setUltimoCamion(String camion){
        this.ultimoCamion = camion;
    }
    
    public void iniciarPantalla(){
        try{
            String query = "select TIPOCAMION.DESCRIPCION from tipoCamion";
            String[] columnas = {"DESCRIPCION"};
            LinkedList<LinkedList<String>> DescripcionCamiones = Globales.baseDatos.select(query, columnas);
            if(DescripcionCamiones == null){
                throw new NoConectionDataBaseException("Error al conectarse con la base de datos: " + Globales.baseDatos.getUltimoError());
            }
            String[] modeloDescripcion = new String[DescripcionCamiones.get(0).size()];
            for(int i = 0; i<DescripcionCamiones.get(0).size(); i++){
                modeloDescripcion[i] = DescripcionCamiones.get(0).get(i);
            }
            
            DefaultComboBoxModel model = new DefaultComboBoxModel(modeloDescripcion);
            descripcionCB.setModel(model);
            
            //INGRESAR LOS DATOS DEL CAMION SELECCIONADO
            
            query = "SELECT IDCAMION, OPERADOR, TIPOCAMION.DESCRIPCION, COLOR, ACTIVO FROM CAMION, TIPOCAMION WHERE"
                    + " CAMION.IDCAMION = "+ultimoCamion+" AND CAMION.IDTIPOCAMION = TIPOCAMION.IDTIPOCAMION";
            String[] columnasCamion = {"IDCAMION", "OPERADOR", "DESCRIPCION", "COLOR", "ACTIVO"};
            
            LinkedList<LinkedList<String>> datosCamion = Globales.baseDatos.select(query, columnasCamion);
            
            if(datosCamion == null || datosCamion.size() == 0){
                throw new NoConectionDataBaseException("Error al conectarse con la base de datos: " + Globales.baseDatos.getUltimoError());
            }
            
            numeroComercialTB.setText(datosCamion.get(0).get(0));
            operadorTB.setText(datosCamion.get(1).get(0));
            colorTB.setText(datosCamion.get(3).get(0));
            
            if(!datosCamion.get(4).get(0).equals(new String("1"))){
                activoCB.setSelected(false);
            }
            
            //descripcionCB.setActionCommand("torton");//datosCamion.get(2).get(0));
            descripcionCB.setSelectedItem(datosCamion.get(2).get(0));
            
        }
        catch(NoConectionDataBaseException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error de conexión con la base de datos", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public EditarCamion() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Añadir Camion");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        numeroComercialTB = new javax.swing.JTextField();
        operadorTB = new javax.swing.JTextField();
        descripcionCB = new javax.swing.JComboBox<>();
        colorTB = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cancelarB = new javax.swing.JButton();
        continuarB = new javax.swing.JButton();
        activoCB = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(249, 255, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLabel1.setText("Número Comercial:");

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLabel2.setText("Operador:");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLabel3.setText("Descripción:");

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        jLabel4.setText("Color:");

        numeroComercialTB.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        numeroComercialTB.setEnabled(false);
        numeroComercialTB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroComercialTBActionPerformed(evt);
            }
        });

        operadorTB.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        descripcionCB.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        colorTB.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 48)); // NOI18N
        jLabel5.setText("Editar Camión");

        cancelarB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/cancelar.png"))); // NOI18N
        cancelarB.setContentAreaFilled(false);
        cancelarB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarB.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/cancelar2.png"))); // NOI18N
        cancelarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarBActionPerformed(evt);
            }
        });

        continuarB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/aceptar.png"))); // NOI18N
        continuarB.setContentAreaFilled(false);
        continuarB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        continuarB.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/aceptar2.png"))); // NOI18N
        continuarB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuarBActionPerformed(evt);
            }
        });

        activoCB.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        activoCB.setSelected(true);
        activoCB.setText("Activo");
        activoCB.setContentAreaFilled(false);
        activoCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activoCBActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gravicor/AssetsNuevos/encabezadoLogoGravicor.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(244, 244, 244))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(20, 20, 20))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(cancelarB, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(continuarB, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(numeroComercialTB)
                            .addComponent(operadorTB)
                            .addComponent(colorTB)
                            .addComponent(descripcionCB, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(activoCB)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numeroComercialTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(operadorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(descripcionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(colorTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(activoCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cancelarB)
                    .addComponent(continuarB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numeroComercialTBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroComercialTBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroComercialTBActionPerformed

    private void cancelarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarBActionPerformed
        // TODO add your handling code here:
        GestionDeCamiones camiones= new GestionDeCamiones();
        camiones.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cancelarBActionPerformed

    private void continuarBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuarBActionPerformed
        // TODO add your handling code here:
        try{
            int revisar;
            try{
                revisar = Integer.parseInt(numeroComercialTB.getText());
            }
            catch(Exception e){
                throw new NoTypeRequiredException("El numero comercial ingresado no es valido, debe ser numerico, por favor introducelo de nuevo");
            }
            
            if(operadorTB.getText().length()<5 || operadorTB.getText().length() >50){
                throw new NoTypeRequiredException("El nombre del operador no es valido, por favor ingresa un nombre entre 5 y 50 caracteres");
            }
            
            if(colorTB.getText().length()<3 || colorTB.getText().length() >15){
                throw new NoTypeRequiredException("El color ingresado no es valido, por favor ingresa un texto entre 3 y 15 caracteres");
            }
            String camionActivo;
            if(activoCB.isSelected()){
                camionActivo = "1";
            }
            else{
                camionActivo = "0";
            }
            
            String query = "select tipocamion.IDTIPOCAMION from tipocamion where tipocamion.descripcion = '"+ descripcionCB.getSelectedItem()+"'";
            String[] columnas = {"IDTIPOCAMION"};
            LinkedList<LinkedList<String>> idTipoCamion = Globales.baseDatos.select(query, columnas);
            if(idTipoCamion == null || idTipoCamion.get(0).size()==0){
                throw new NoConectionDataBaseException("Error al conectarse con la base de datos: " + Globales.baseDatos.getUltimoError());
            }
            query = "UPDATE CAMION SET OPERADOR = '"+operadorTB.getText().toLowerCase()+"', IDTIPOCAMION = "+idTipoCamion.get(0).get(0)+", COLOR = '"+colorTB.getText().toLowerCase()+"', ACTIVO = "+camionActivo+" "
                    + "WHERE CAMION.IDCAMION = "+revisar+"";
            
            //query = "insert into CAMION (IDCAMION, OPERADOR, IDTIPOCAMION, COLOR, ACTIVO) VALUES ("+Integer.toString(revisar)+""
                            //+ ", '"+operadorTB.getText().toLowerCase()+"', "+idTipoCamion.get(0).get(0)+",'"+colorTB.getText().toLowerCase()+"',  1)";
            boolean bandera = Globales.baseDatos.update(query);
            if(bandera){
                GestionDeCamiones camiones= new GestionDeCamiones();
                camiones.setVisible(true);
            this.dispose();
            }
            else{
                throw new NoConectionDataBaseException("Error al conectarse con la base de datos: " + Globales.baseDatos.getUltimoError());
            }
        }
        
        catch(NoTypeRequiredException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error al guardar el registro", JOptionPane.WARNING_MESSAGE);
        }
        catch(NoConectionDataBaseException e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error de conexión con la base de datos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_continuarBActionPerformed

    private void activoCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activoCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_activoCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarCamion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarCamion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarCamion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarCamion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarCamion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activoCB;
    private javax.swing.JButton cancelarB;
    private javax.swing.JTextField colorTB;
    private javax.swing.JButton continuarB;
    private javax.swing.JComboBox<String> descripcionCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField numeroComercialTB;
    private javax.swing.JTextField operadorTB;
    // End of variables declaration//GEN-END:variables
}
